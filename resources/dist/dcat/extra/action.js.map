{"version":3,"file":"/resources/dist/dcat/extra/action.js","mappings":"otBAAA,SAAWA,GAAM,IAEPC,EAAM,WACR,SAAAA,EAAYC,I,4FAASC,CAAA,KAAAF,GACjBG,KAAKF,QAAUG,EAAEC,OAAO,CACpBC,SAAU,KACVC,MAAO,QACPC,OAAQ,OACRC,IAAK,KACLC,IAAK,KACLC,KAAM,CAAC,EACPC,QAAS,KACTC,YAAa,KACbC,OAAQ,SAAUH,EAAMI,GAAS,EACjCC,KAAM,SAAUD,EAAQC,EAAML,GAC1BI,EAAOC,KAAKA,EAChB,EACAC,QAAS,SAAUF,EAAQG,GAAU,EACrCC,MAAO,SAAUJ,EAAQG,GAAU,GACpCjB,GAEHE,KAAKiB,MACT,C,UA+FC,O,EA/FApB,G,EAAA,EAAAS,IAAA,OAAAY,MAED,WACI,IAAIC,EAAQnB,KAAMF,EAAUqB,EAAMrB,QAElCG,EAAEH,EAAQK,UAAUiB,IAAItB,EAAQM,OAAOiB,GAAGvB,EAAQM,OAAO,SAAUkB,GAC/D,IAAId,EAAOP,EAAED,MAAMQ,OACfI,EAASX,EAAED,MACf,KAAIY,EAAOW,KAAK,WAAa,KAIe,IAAxCzB,EAAQa,OAAOH,EAAMI,EAAQO,GAAjC,CAaA,IAAIK,EAAU1B,EAAQW,QAElBe,EACA5B,EAAKa,QAAQe,EAAQ,GAAIA,EAAQ,GAAIC,GAErCA,GAhBJ,CAGA,SAASA,IACLb,EAAOW,KAAK,UAAW,GAEvBG,OAAOC,OAAOnB,EAAMV,EAAQU,MAE5BW,EAAMS,QAAQhB,EAAQJ,GAAMqB,KAAKV,EAAMW,WAAU,MAAOX,EAAMY,SAClE,CASJ,GACJ,GAAC,CAAAzB,IAAA,UAAAY,MAED,WACI,IAAkBpB,EAANE,KAAsBF,QAElC,OAAO,SAAUkC,GACb,IAAIC,EAAWD,EAAO,GAClBpB,EAAWoB,EAAO,IAEoB,IAAtClC,EAAQgB,QAAQF,EAAQqB,IAI5BrC,EAAKsC,mBAAmBD,EAAU,CAACpB,KAAMf,EAAQe,KAAMD,OAAQA,GACnE,CACJ,GAAC,CAAAN,IAAA,SAAAY,MAED,WACI,IAAIpB,EAAUE,KAAKF,QAEnB,OAAO,SAAUkC,GACb,IAAIP,EAAUO,EAAO,GAAIpB,EAASoB,EAAO,IAEA,IAArClC,EAAQgB,QAAQF,EAAQa,KAIxBA,GAA2C,WAAhCU,EAAOV,EAAQW,eAC1BxC,EAAKoB,MAAMS,EAAQW,aAAaC,SAEpCC,QAAQtB,MAAMgB,GAClB,CACJ,GAAC,CAAA1B,IAAA,UAAAY,MAED,SAAQN,EAAQJ,GACZ,IAAIV,EAAUE,KAAKF,QAEnB,OAAO,IAAIyC,SAAQ,SAAUT,EAASC,GAClCL,OAAOC,OAAOnB,EAAM,CAChBgC,QAAS1C,EAAQY,YACjB+B,KAAM3C,EAAQQ,IACdoC,OAAQ9C,EAAK+C,QAGjB/C,EAAKgD,GAAGC,QAER5C,EAAE6C,KAAK,CACHzC,OAAQP,EAAQO,OAChBE,IAAKT,EAAQS,IACbC,KAAMA,EACNM,QAAS,SAAUN,GACfI,EAAOW,KAAK,UAAW,GACvB3B,EAAKgD,GAAGG,OACRjB,EAAQ,CAACtB,EAAMI,GACnB,EACAI,MAAM,SAASS,GACXb,EAAOW,KAAK,UAAW,GACvB3B,EAAKgD,GAAGG,OACRhB,EAAO,CAACN,EAASb,GACrB,GAER,GACJ,M,8EAACf,CAAA,CAnHO,GAsHZD,EAAKC,OAAS,SAAUmD,GACpB,OAAO,IAAInD,EAAOmD,EACtB,CACH,CA3HD,CA2HGpD,K","sources":["webpack:///./resources/assets/dcat/extra/action.js"],"sourcesContent":["(function (Dcat) {\n\n    class Action {\n        constructor(options) {\n            this.options = $.extend({\n                selector: null, // 按钮选择器\n                event: 'click',\n                method: 'POST',\n                key: null, // 行主键\n                url: null,\n                data: {}, // 发送到接口的附加参数\n                confirm: null,\n                calledClass: null,\n                before: function (data, target) {}, // 发起请求之前回调，返回false可以中断请求\n                html: function (target, html, data) { // 处理返回的HTML代码\n                    target.html(html);\n                },\n                success: function (target, results) {}, // 请求成功回调，返回false可以中断默认的成功处理逻辑\n                error: function (target, results) {}, // 请求出错回调，返回false可以中断默认的错误处理逻辑\n            }, options);\n\n            this.init();\n        }\n\n        init() {\n            let _this = this, options = _this.options;\n\n            $(options.selector).off(options.event).on(options.event, function (e) {\n                let data = $(this).data(),\n                    target = $(this);\n                if (target.attr('loading') > 0) {\n                    return;\n                }\n\n                if (options.before(data, target, _this) === false) {\n                    return;\n                }\n\n                // 发起请求\n                function request() {\n                    target.attr('loading', 1);\n\n                    Object.assign(data, options.data);\n\n                    _this.promise(target, data).then(_this.resolve()).catch(_this.reject());\n                }\n\n                var conform = options.confirm;\n\n                if (conform) {\n                    Dcat.confirm(conform[0], conform[1], request);\n                } else {\n                    request()\n                }\n            });\n        }\n\n        resolve() {\n            let _this = this, options = _this.options;\n\n            return function (result) {\n                var response = result[0],\n                    target   = result[1];\n\n                if (options.success(target, response) === false) {\n                    return;\n                }\n\n                Dcat.handleJsonResponse(response, {html: options.html, target: target});\n            };\n        }\n\n        reject() {\n            let options = this.options;\n\n            return function (result) {\n                var request = result[0], target = result[1];\n\n                if (options.success(target, request) === false) {\n                    return;\n                }\n\n                if (request && typeof request.responseJSON === 'object') {\n                    Dcat.error(request.responseJSON.message)\n                }\n                console.error(result);\n            }\n        }\n\n        promise(target, data) {\n            let options = this.options;\n\n            return new Promise(function (resolve, reject) {\n                Object.assign(data, {\n                    _action: options.calledClass,\n                    _key: options.key,\n                    _token: Dcat.token,\n                });\n\n                Dcat.NP.start();\n\n                $.ajax({\n                    method: options.method,\n                    url: options.url,\n                    data: data,\n                    success: function (data) {\n                        target.attr('loading', 0);\n                        Dcat.NP.done();\n                        resolve([data, target]);\n                    },\n                    error:function(request){\n                        target.attr('loading', 0);\n                        Dcat.NP.done();\n                        reject([request, target]);\n                    }\n                });\n            });\n        }\n    }\n\n    Dcat.Action = function (opts) {\n        return new Action(opts);\n    };\n})(Dcat);\n\n"],"names":["Dcat","Action","options","_classCallCheck","this","$","extend","selector","event","method","key","url","data","confirm","calledClass","before","target","html","success","results","error","init","value","_this","off","on","e","attr","conform","request","Object","assign","promise","then","resolve","reject","result","response","handleJsonResponse","_typeof","responseJSON","message","console","Promise","_action","_key","_token","token","NP","start","ajax","done","opts"],"sourceRoot":""}